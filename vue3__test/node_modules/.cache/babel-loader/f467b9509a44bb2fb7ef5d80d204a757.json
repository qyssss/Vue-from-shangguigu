{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h2\", null, \"姓名：\" + _toDisplayString($setup.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \"年龄：\" + _toDisplayString($setup.age), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \"薪水:\" + _toDisplayString($setup.salary), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.name += '!')\n  }, \"修改姓名\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.age++)\n  }, \"修改年龄\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.salary++)\n  }, \"薪资++\")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;6DACEA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,QAAGC,iBAAGC,WAAH,CAAP,EAAc;EAAA;EAAd,GACAF,oBAAqB,IAArB,EAAqB,IAArB,EAAI,QAAGC,iBAAGC,UAAH,CAAP,EAAa;EAAA;EAAb,GACAF,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,QAAGC,iBAAGC,aAAH,CAAP,EAAgB;EAAA;EAAhB,GACAF,oBAA0C,QAA1C,EAA0C;IAAjCG,OAAK,sCAAED,eAAI,GAAN;EAA4B,CAA1C,EAA6B,MAA7B,GACAF,oBAAoC,QAApC,EAAoC;IAA3BG,OAAK,sCAAED,YAAF;EAAsB,CAApC,EAAuB,MAAvB,GACAF,oBAAuC,QAAvC,EAAuC;IAA9BG,OAAK,sCAAED,eAAF;EAAyB,CAAvC,EAA0B,MAA1B","names":["_createElementVNode","_toDisplayString","$setup","onClick"],"sourceRoot":"","sources":["D:\\尚硅谷-vue\\vue3__test\\src\\components\\Demo.vue"],"sourcesContent":["<template>\n  <h2>姓名：{{ name }}</h2>\n  <h2>年龄：{{ age }}</h2>\n  <h2>薪水:{{ salary }}</h2>\n  <button @click=\"name += '!'\">修改姓名</button>\n  <button @click=\"age++\">修改年龄</button>\n  <button @click=\"salary++\">薪资++</button>\n</template>\n\n<script>\nimport { toRef, reactive } from \"vue\";\nexport default {\n  name: \"Demo\",\n  setup() {\n    // 数据\n    let person = reactive({\n      name: \"qys\",\n      age: 14,\n      job: {\n        j1: {\n          salary: \"2133\",\n        },\n      },\n    });\n    const name1 = person.name;\n    console.log(name1);\n    const name2 = toRef(person, \"name\");\n    console.log(name2);\n    return {\n      name: person.name,\n      salary: person.job.j1.salary,\n      age: person.age,\n    };\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}