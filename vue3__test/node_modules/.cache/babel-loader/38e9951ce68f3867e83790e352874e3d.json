{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h2\", null, \"求和为:\" + _toDisplayString($setup.sum), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.sum++)\n  }, \"+1\"), _hoisted_1, _createElementVNode(\"h2\", null, \"信息:\" + _toDisplayString(_ctx.msg), 1\n  /* TEXT */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAGEA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;6DAFAA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,SAAIC,iBAAGC,UAAH,CAAR,EAAc;EAAA;EAAd,GACAF,oBAAkC,QAAlC,EAAkC;IAAzBG,OAAK,sCAAED,YAAF;EAAoB,CAAlC,EAAuB,IAAvB,GACAE,YACAJ,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,QAAGC,iBAAEI,QAAF,CAAP,EAAY;EAAA;EAAZ","names":["_createElementVNode","_toDisplayString","$setup","onClick","_hoisted_1","_ctx"],"sourceRoot":"","sources":["D:\\尚硅谷-vue\\vue3__test\\src\\components\\Demo.vue"],"sourcesContent":["<template>\r\n  <h2>求和为:{{ sum }}</h2>\r\n  <button @click=\"sum++\">+1</button>\r\n  <hr>\r\n  <h2>信息:{{msg}}</h2>\r\n</template>\r\n\r\n<script>\r\nimport { watch, ref } from \"vue\";\r\nexport default {\r\n  name: \"Demo\",\r\n\r\n  setup() {\r\n    // 数据\r\n    let sum = ref(0);\r\n    let msg = ref('hello');\r\n    // 1.监视ref所定义的一个响应式数据\r\n    /* watch(sum, (newValue, oldValue) => {\r\n      console.log(newValue, oldValue);\r\n    }); */\r\n    // 2.监视ref所定义的多个响应式数据\r\n    return {\r\n      sum,\r\n    };\r\n  },\r\n  // Vue2\r\n  /* watch: {\r\n    sum(newValue, oldValue) {\r\n      console.log(newValue, oldValue);\r\n    },\r\n  }, */\r\n  /* watch: {\r\n    immediate:true,\r\n    deep:true,\r\n    sum: {\r\n      handler(newValue, oldValue) {\r\n        console.log(newValue, oldValue);\r\n      },\r\n    },\r\n  }, */\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}