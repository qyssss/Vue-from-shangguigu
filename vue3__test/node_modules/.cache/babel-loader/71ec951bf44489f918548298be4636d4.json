{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h2\", null, \"求和为:\" + _toDisplayString($setup.sum), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.sum++)\n  }, \"+1\"), _hoisted_1, _createCommentVNode(\" <h2>信息:{{ msg }}</h2>\\r\\n  <button @click=\\\"msg += '!'\\\">修改</button> \"), _createElementVNode(\"h2\", null, \"姓名：\" + _toDisplayString($setup.person.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \"年龄：\" + _toDisplayString($setup.person.age), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \"薪水:\" + _toDisplayString($setup.person.job.j1.salary), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.person.name += '!')\n  }, \"修改姓名\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.person.age++)\n  }, \"修改年龄\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.person.job.j1.salary++)\n  }, \"薪资++\")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAGEA,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;;6DAFAA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,SAAIC,iBAAGC,UAAH,CAAR,EAAc;EAAA;EAAd,GACAF,oBAAkC,QAAlC,EAAkC;IAAzBG,OAAK,sCAAED,YAAF;EAAoB,CAAlC,EAAuB,IAAvB,GACAE,YACAC,+FAEAL,oBAA6B,IAA7B,EAA6B,IAA7B,EAAI,QAAGC,iBAAGC,cAAOI,IAAV,CAAP,EAAqB;EAAA;EAArB,GACAN,oBAA4B,IAA5B,EAA4B,IAA5B,EAAI,QAAGC,iBAAGC,cAAOK,GAAV,CAAP,EAAoB;EAAA;EAApB,GACAP,oBAAsC,IAAtC,EAAsC,IAAtC,EAAI,QAAGC,iBAAGC,cAAOM,GAAP,CAAWC,EAAX,CAAcC,MAAjB,CAAP,EAA8B;EAAA;EAA9B,GACAV,oBAAiD,QAAjD,EAAiD;IAAxCG,OAAK,sCAAED,cAAOI,IAAP,IAAW,GAAb;EAAmC,CAAjD,EAAoC,MAApC,GACAN,oBAA2C,QAA3C,EAA2C;IAAlCG,OAAK,sCAAED,cAAOK,GAAP,EAAF;EAA6B,CAA3C,EAA8B,MAA9B,GACAP,oBAAqD,QAArD,EAAqD;IAA5CG,OAAK,sCAAED,cAAOM,GAAP,CAAWC,EAAX,CAAcC,MAAd,EAAF;EAAuC,CAArD,EAAwC,MAAxC","names":["_createElementVNode","_toDisplayString","$setup","onClick","_hoisted_1","_createCommentVNode","name","age","job","j1","salary"],"sourceRoot":"","sources":["D:\\尚硅谷-vue\\vue3__test\\src\\components\\Demo.vue"],"sourcesContent":["<template>\r\n  <h2>求和为:{{ sum }}</h2>\r\n  <button @click=\"sum++\">+1</button>\r\n  <hr />\r\n  <!-- <h2>信息:{{ msg }}</h2>\r\n  <button @click=\"msg += '!'\">修改</button> -->\r\n  <h2>姓名：{{ person.name }}</h2>\r\n  <h2>年龄：{{ person.age }}</h2>\r\n  <h2>薪水:{{ person.job.j1.salary }}</h2>\r\n  <button @click=\"person.name += '!'\">修改姓名</button>\r\n  <button @click=\"person.age++\">修改年龄</button>\r\n  <button @click=\"person.job.j1.salary++\">薪资++</button>\r\n</template>\r\n\r\n<script>\r\nimport { watch, ref, reactive } from \"vue\";\r\nexport default {\r\n  name: \"Demo\",\r\n  setup() {\r\n    // 数据\r\n    let sum = ref(0);\r\n    // let msg = ref(\"hello\");\r\n    let person = reactive({\r\n      name: \"qys\",\r\n      age: 14,\r\n      job: {\r\n        j1: {\r\n          salary: \"2133\",\r\n        },\r\n      },\r\n    });\r\n    // 1.监视ref所定义的一个响应式数据\r\n    watch(\r\n      sum,\r\n      (newValue, oldValue) => {\r\n        console.log(newValue, oldValue);\r\n      },\r\n      { immediate: true }\r\n    );\r\n\r\n    // 2.监视ref所定义的多个响应式数据 newValue会是个数组\r\n    /* watch([sum,msg], (newValue, oldValue) => {\r\n      console.log(newValue, oldValue);\r\n    }); */\r\n\r\n    // 3.监视 reactive 定义的响应式数据,\r\n    // 重点 a.注意此处无法正确获得oldValue\r\n    // 重点 b.强制开启了深度监视,deep:false无效\r\n    /* watch(person, (newValue, oldValue) => {\r\n      console.log(newValue, oldValue);\r\n    }); */\r\n\r\n    // 4.监视 reactive 定义的响应式数据某个属性 需要写成函数返回值 ()=>person.age\r\n    /* watch(()=>person.age, (newValue, oldValue) => {\r\n      console.log(newValue, oldValue);\r\n    }); */\r\n\r\n    // 5.监视 reactive 定义的响应式数据多个属性(基本类型)\r\n    /* watch([()=>person.age,()=>person.name], (newValue, oldValue) => {\r\n      console.log(newValue, oldValue);\r\n    }); */\r\n\r\n    // 特殊情况 这个时候如果要监视内部要开深度监视(监视reactive中\"对象\"的某个属性,deep有效)\r\n    /* watch(()=>person.job, (newValue, oldValue) => {\r\n      console.log(newValue, oldValue);\r\n    },{deep:true});  */\r\n\r\n    return {\r\n      sum,\r\n      person,\r\n      // msg,\r\n    };\r\n  },\r\n  // Vue2\r\n  /* watch: {\r\n    sum(newValue, oldValue) {\r\n      console.log(newValue, oldValue);\r\n    },\r\n  }, */\r\n  /* watch: {\r\n    immediate:true,\r\n    deep:true,\r\n    sum: {\r\n      handler(newValue, oldValue) {\r\n        console.log(newValue, oldValue);\r\n      },\r\n    },\r\n  }, */\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}