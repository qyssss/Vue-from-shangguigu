{"ast":null,"code":"import { computed, reactive } from \"vue\";\nexport default {\n  name: \"Demo\",\n\n  setup() {\n    // 数据\n    let person = reactive({\n      firstName: \"sqy\",\n      lastName: \"yyyyyy\"\n    }); // 计算属性(简写,不考虑修改)\n\n    /* person.fullName = computed(() => {\r\n      return person.firstName + \" \" + person.lastName;\r\n    }); */\n    //  完整写法(考虑读和写)\n\n    person.fullName = computed({\n      get() {\n        return person.firstName + \" \" + person.lastName;\n      },\n\n      set(value) {\n        const nameArr = value.split(\" \");\n        person.firstName = nameArr[0];\n        person.lastName = nameArr[1];\n      }\n\n    });\n    return {\n      person\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAWA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,KAAnC;AACA,eAAe;EACbC,IAAI,EAAE,MADO;;EAEbC,KAAK,GAAG;IACN;IACA,IAAIC,MAAK,GAAIH,QAAQ,CAAC;MACpBI,SAAS,EAAE,KADS;MAEpBC,QAAQ,EAAE;IAFU,CAAD,CAArB,CAFM,CAMN;;IACA;;;IAGA;;IACAF,MAAM,CAACG,QAAP,GAAkBP,QAAQ,CAAC;MACzBQ,GAAG,GAAG;QACJ,OAAOJ,MAAM,CAACC,SAAP,GAAmB,GAAnB,GAAyBD,MAAM,CAACE,QAAvC;MACD,CAHwB;;MAIzBG,GAAG,CAACC,KAAD,EAAQ;QACT,MAAMC,OAAM,GAAID,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAhB;QACAR,MAAM,CAACC,SAAP,GAAmBM,OAAO,CAAC,CAAD,CAA1B;QACAP,MAAM,CAACE,QAAP,GAAkBK,OAAO,CAAC,CAAD,CAAzB;MACD;;IARwB,CAAD,CAA1B;IAUA,OAAO;MACLP;IADK,CAAP;EAGD;;AA1BY,CAAf","names":["computed","reactive","name","setup","person","firstName","lastName","fullName","get","set","value","nameArr","split"],"sourceRoot":"","sources":["D:\\尚硅谷-vue\\vue3__test\\src\\components\\Demo.vue"],"sourcesContent":["<template>\r\n  <h1>信息</h1>\r\n  姓：<input type=\"text\" v-model=\"person.firstName\" /> 名：<input\r\n    type=\"text\"\r\n    v-model=\"person.lastName\"\r\n  />\r\n  <span>全名:{{ person.fullName }}</span>\r\n  <input type=\"text\" v-model=\"person.firstName\">\r\n</template>\r\n\r\n<script>\r\nimport { computed, reactive } from \"vue\";\r\nexport default {\r\n  name: \"Demo\",\r\n  setup() {\r\n    // 数据\r\n    let person = reactive({\r\n      firstName: \"sqy\",\r\n      lastName: \"yyyyyy\",\r\n    });\r\n    // 计算属性(简写,不考虑修改)\r\n    /* person.fullName = computed(() => {\r\n      return person.firstName + \" \" + person.lastName;\r\n    }); */\r\n    //  完整写法(考虑读和写)\r\n    person.fullName = computed({\r\n      get() {\r\n        return person.firstName + \" \" + person.lastName;\r\n      },\r\n      set(value) {\r\n        const nameArr = value.split(\" \");\r\n        person.firstName = nameArr[0];\r\n        person.lastName = nameArr[1];\r\n      },\r\n    });\r\n    return {\r\n      person,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}