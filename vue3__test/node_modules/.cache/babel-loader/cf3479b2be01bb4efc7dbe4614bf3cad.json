{"ast":null,"code":"import { reactive } from \"vue\";\nexport default {\n  name: \"App\",\n\n  setup() {\n    // 数据  ref 把普通数据变成响应式的引用对象(RefImpl)\n    // ref 处理基本数据用的getter,setter(Object.defineProperty),\n    // 处理对象转化为Proxy(封装在reactive)\n\n    /*  let name = ref(\"sqy\");\n    let age = ref(18);\n    // reactive 只能用于对象和数组类型,直接把对象变成Proxy类型\n    let job = reactive({\n      type: \"student\",\n      salary: \"10k\",\n    });\n    let hobby = reactive(['dance','sing','dream']) */\n    // 数据\n    let person = reactive({\n      name: \"sqy\",\n      age: 18,\n      job: {\n        type: \"student\",\n        salary: \"10k\"\n      },\n      hobby: [\"dance\", \"sing\", \"dream\"]\n    }); // 方法\n\n    function changeInfo() {\n      // ref 生成了一个引用对象,用value访问值,在模板中不要用.value,vue会自动做\n      person.name = \"qys\";\n      person.age = 88; // 对象中内部也配置了响应式,但是不需要.value\n\n      person.job.type = \"clerk\";\n      person.job.salary = \"28k\"; // vue3中可以直接修改,vue2需要Vue.$set\n\n      person.hobby[0] = \"hello\";\n    }\n\n    function addSex() {\n      person.sex = \"male\";\n    }\n\n    function deleteName() {\n      delete person.name;\n    }\n\n    return {\n      person,\n      changeInfo,\n      addSex,\n      deleteName\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAcA,SAASA,QAAT,QAAyB,KAAzB;AACA,eAAe;EACbC,IAAI,EAAE,KADO;;EAEbC,KAAK,GAAG;IACN;IACA;IACA;;IACA;;;;;;;;IASA;IACA,IAAIC,MAAK,GAAIH,QAAQ,CAAC;MACpBC,IAAI,EAAE,KADc;MAEpBG,GAAG,EAAE,EAFe;MAGpBC,GAAG,EAAE;QACHC,IAAI,EAAE,SADH;QAEHC,MAAM,EAAE;MAFL,CAHe;MAOpBC,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB;IAPa,CAAD,CAArB,CAdM,CAuBN;;IACA,SAASC,UAAT,GAAsB;MACpB;MACAN,MAAM,CAACF,IAAP,GAAc,KAAd;MACAE,MAAM,CAACC,GAAP,GAAa,EAAb,CAHoB,CAIpB;;MACAD,MAAM,CAACE,GAAP,CAAWC,IAAX,GAAkB,OAAlB;MACAH,MAAM,CAACE,GAAP,CAAWE,MAAX,GAAoB,KAApB,CANoB,CAOpB;;MACAJ,MAAM,CAACK,KAAP,CAAa,CAAb,IAAkB,OAAlB;IACF;;IACA,SAASE,MAAT,GAAkB;MAChBP,MAAM,CAACQ,GAAP,GAAa,MAAb;IACF;;IACA,SAASC,UAAT,GAAsB;MACpB,OAAOT,MAAM,CAACF,IAAd;IACF;;IACA,OAAO;MACLE,MADK;MAELM,UAFK;MAGLC,MAHK;MAILE;IAJK,CAAP;EAMD;;AAhDY,CAAf","names":["reactive","name","setup","person","age","job","type","salary","hobby","changeInfo","addSex","sex","deleteName"],"sourceRoot":"","sources":["D:\\尚硅谷-vue\\vue3__test\\src\\App.vue"],"sourcesContent":["<template>\n  <h1>信息</h1>\n  <h2 v-show=\"person\">姓名{{ person.name }}</h2>\n  <h2>年龄{{ person.age }}</h2>\n  <h2 v-show=\"person.sex\">性别:{{person.sex}}</h2>\n  <h3>工作种类:{{ person.job.type }}</h3>\n  <h3>工作薪水:{{ person.job.salary }}</h3>\n  <h3>爱好:{{ person.hobby }}</h3>\n  <button @click=\"changeInfo\">修改信息</button>\n  <button @click=\"addSex\">添加sex</button>\n  <button @click=\"deleteName\">删除name</button>\n</template>\n\n<script>\nimport { reactive } from \"vue\";\nexport default {\n  name: \"App\",\n  setup() {\n    // 数据  ref 把普通数据变成响应式的引用对象(RefImpl)\n    // ref 处理基本数据用的getter,setter(Object.defineProperty),\n    // 处理对象转化为Proxy(封装在reactive)\n    /*  let name = ref(\"sqy\");\n    let age = ref(18);\n    // reactive 只能用于对象和数组类型,直接把对象变成Proxy类型\n    let job = reactive({\n      type: \"student\",\n      salary: \"10k\",\n    });\n    let hobby = reactive(['dance','sing','dream']) */\n\n    // 数据\n    let person = reactive({\n      name: \"sqy\",\n      age: 18,\n      job: {\n        type: \"student\",\n        salary: \"10k\",\n      },\n      hobby: [\"dance\", \"sing\", \"dream\"],\n    });\n    // 方法\n    function changeInfo() {\n      // ref 生成了一个引用对象,用value访问值,在模板中不要用.value,vue会自动做\n      person.name = \"qys\";\n      person.age = 88;\n      // 对象中内部也配置了响应式,但是不需要.value\n      person.job.type = \"clerk\";\n      person.job.salary = \"28k\";\n      // vue3中可以直接修改,vue2需要Vue.$set\n      person.hobby[0] = \"hello\";\n    }\n    function addSex() {\n      person.sex = \"male\";\n    }\n    function deleteName() {\n      delete person.name;\n    }\n    return {\n      person,\n      changeInfo,\n      addSex,\n      deleteName,\n    };\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}