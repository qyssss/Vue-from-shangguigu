{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h2\", null, \"求和为:\" + _toDisplayString(_ctx.sum), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"mappings":";;uBACEA,oBAAoB,IAApB,EAAoB,IAApB,EAAI,SAAIC,iBAAEC,QAAF,CAAR,EAAa;EAAA;EAAb","names":["_createElementBlock","_toDisplayString","_ctx"],"sourceRoot":"","sources":["D:\\尚硅谷-vue\\vue3__test\\src\\components\\Demo.vue"],"sourcesContent":["<template>\r\n  <h2>求和为:{{sum}}</h2>\r\n</template>\r\n\r\n<script>\r\nimport { computed, ref } from \"vue\";\r\nexport default {\r\n  name: \"Demo\",\r\n  setup() {\r\n    // 数据\r\n    let sum = reactive({\r\n      firstName: \"sqy\",\r\n      lastName: \"yyyyyy\",\r\n    });\r\n    // 计算属性(简写,不考虑修改)\r\n    /* person.fullName = computed(() => {\r\n      return person.firstName + \" \" + person.lastName;\r\n    }); */\r\n    //  完整写法(考虑读和写)\r\n    person.fullName = computed({\r\n      get() {\r\n        return person.firstName + \" \" + person.lastName;\r\n      },\r\n      set(value) {\r\n        const nameArr = value.split(\" \");\r\n        person.firstName = nameArr[0];\r\n        person.lastName = nameArr[1];\r\n      },\r\n    });\r\n    return {\r\n      person,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}