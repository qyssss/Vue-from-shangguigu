{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h2\", null, \"x:\" + _toDisplayString($setup.x), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.x++)\n  }, \"x++\"), _createElementVNode(\"h2\", null, \"姓名：\" + _toDisplayString(_ctx.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \"年龄：\" + _toDisplayString(_ctx.age), 1\n  /* TEXT */\n  ), _createElementVNode(\"h2\", null, \"薪水:\" + _toDisplayString(_ctx.job.j1.salary), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.name += '!')\n  }, \"修改姓名\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.age++)\n  }, \"修改年龄\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.job.j1.salary++)\n  }, \"薪资++\")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;6DACEA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,OAAEC,iBAAGC,QAAH,CAAN,EAAU;EAAA;EAAV,GACAF,oBAAiC,QAAjC,EAAiC;IAAxBG,OAAK,sCAAED,UAAF;EAAmB,CAAjC,EAAqB,KAArB,GACAF,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,QAAGC,iBAAGG,SAAH,CAAP,EAAc;EAAA;EAAd,GACAJ,oBAAqB,IAArB,EAAqB,IAArB,EAAI,QAAGC,iBAAGG,QAAH,CAAP,EAAa;EAAA;EAAb,GACAJ,oBAA+B,IAA/B,EAA+B,IAA/B,EAAI,QAAGC,iBAAGG,SAAIC,EAAJ,CAAOC,MAAV,CAAP,EAAuB;EAAA;EAAvB,GACAN,oBAA0C,QAA1C,EAA0C;IAAjCG,OAAK,sCAAEC,aAAI,GAAN;EAA4B,CAA1C,EAA6B,MAA7B,GACAJ,oBAAoC,QAApC,EAAoC;IAA3BG,OAAK,sCAAEC,UAAF;EAAsB,CAApC,EAAuB,MAAvB,GACAJ,oBAA8C,QAA9C,EAA8C;IAArCG,OAAK,sCAAEC,SAAIC,EAAJ,CAAOC,MAAP,EAAF;EAAgC,CAA9C,EAAiC,MAAjC","names":["_createElementVNode","_toDisplayString","$setup","onClick","_ctx","j1","salary"],"sourceRoot":"","sources":["D:\\尚硅谷-vue\\vue3__test\\src\\components\\Demo.vue"],"sourcesContent":["<template>\r\n  <h2>x:{{ x }}</h2>\r\n  <button @click=\"x++\">x++</button>\r\n  <h2>姓名：{{ name }}</h2>\r\n  <h2>年龄：{{ age }}</h2>\r\n  <h2>薪水:{{ job.j1.salary }}</h2>\r\n  <button @click=\"name += '!'\">修改姓名</button>\r\n  <button @click=\"age++\">修改年龄</button>\r\n  <button @click=\"job.j1.salary++\">薪资++</button>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRef, toRefs, shallowReactive, shallowRef } from \"vue\";\r\nexport default {\r\n  name: \"Demo\",\r\n  setup() {\r\n    // shallowReactive只考虑第一层的响应式\r\n    // 数据\r\n    let person = reactive({\r\n      name: \"qys\",\r\n      age: 14,\r\n      job: {\r\n        j1: {\r\n          salary: 2000,\r\n        },\r\n      },\r\n    });\r\n    let x = ref(0);\r\n    return {\r\n      x,\r\n      ...toRefs(person),\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}