{"ast":null,"code":"import { toRef, reactive } from \"vue\";\nexport default {\n  name: \"Demo\",\n\n  setup() {\n    // 数据\n    let person = reactive({\n      name: \"qys\",\n      age: 14,\n      job: {\n        j1: {\n          salary: \"2133\"\n        }\n      }\n    });\n    const name1 = person.name;\n    console.log(name1);\n    const name2 = toRef(person, \"name\");\n    console.log(name2); // toRef 第一个参数传对象即可,可以返回一个Ref对象\n    // 如果直接用 name:ref(person.name),如果修改\n\n    return {\n      name: toRef(person, \"name\"),\n      salary: toRef(person.job.j1, \"salary\"),\n      age: toRef(person, \"age\")\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAUA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,KAAhC;AACA,eAAe;EACbC,IAAI,EAAE,MADO;;EAEbC,KAAK,GAAG;IACN;IACA,IAAIC,MAAK,GAAIH,QAAQ,CAAC;MACpBC,IAAI,EAAE,KADc;MAEpBG,GAAG,EAAE,EAFe;MAGpBC,GAAG,EAAE;QACHC,EAAE,EAAE;UACFC,MAAM,EAAE;QADN;MADD;IAHe,CAAD,CAArB;IASA,MAAMC,KAAI,GAAIL,MAAM,CAACF,IAArB;IACAQ,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,MAAMG,KAAI,GAAIZ,KAAK,CAACI,MAAD,EAAS,MAAT,CAAnB;IACAM,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAdM,CAeN;IACA;;IACA,OAAO;MACLV,IAAI,EAAEF,KAAK,CAACI,MAAD,EAAS,MAAT,CADN;MAELI,MAAM,EAAER,KAAK,CAACI,MAAM,CAACE,GAAP,CAAWC,EAAZ,EAAgB,QAAhB,CAFR;MAGLF,GAAG,EAAEL,KAAK,CAACI,MAAD,EAAS,KAAT;IAHL,CAAP;EAKD;;AAxBY,CAAf","names":["toRef","reactive","name","setup","person","age","job","j1","salary","name1","console","log","name2"],"sourceRoot":"","sources":["D:\\尚硅谷-vue\\vue3__test\\src\\components\\Demo.vue"],"sourcesContent":["<template>\r\n  <h2>姓名：{{ name }}</h2>\r\n  <h2>年龄：{{ age }}</h2>\r\n  <h2>薪水:{{ salary }}</h2>\r\n  <button @click=\"name += '!'\">修改姓名</button>\r\n  <button @click=\"age++\">修改年龄</button>\r\n  <button @click=\"salary++\">薪资++</button>\r\n</template>\r\n\r\n<script>\r\nimport { toRef, reactive } from \"vue\";\r\nexport default {\r\n  name: \"Demo\",\r\n  setup() {\r\n    // 数据\r\n    let person = reactive({\r\n      name: \"qys\",\r\n      age: 14,\r\n      job: {\r\n        j1: {\r\n          salary: \"2133\",\r\n        },\r\n      },\r\n    });\r\n    const name1 = person.name;\r\n    console.log(name1);\r\n    const name2 = toRef(person, \"name\");\r\n    console.log(name2);\r\n    // toRef 第一个参数传对象即可,可以返回一个Ref对象\r\n    // 如果直接用 name:ref(person.name),如果修改\r\n    return {\r\n      name: toRef(person, \"name\"),\r\n      salary: toRef(person.job.j1, \"salary\"),\r\n      age: toRef(person, \"age\"),\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n\r\n"]},"metadata":{},"sourceType":"module"}